name: ML Pipeline - Wine Quality

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      
      - name: Run Flake8
        run: |
          flake8 src/ --max-line-length=100 --exclude=__pycache__ --count --statistics || true
      
      - name: Check formatting with Black
        run: |
          black --check src/ --line-length=100 || true

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          pytest tests/ -v --cov=src --cov-report=term-missing || true

  train:
    name: Train Model
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Create directories
        run: |
          mkdir -p data/raw data/processed models mlruns plots logs
      
      - name: Download dataset
        run: |
          curl -o data/raw/winequality-red.csv \
            "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
          
          if [ -f "data/raw/winequality-red.csv" ]; then
            echo "Dataset downloaded successfully"
            wc -l data/raw/winequality-red.csv
          else
            echo "ERROR: Dataset download failed"
            exit 1
          fi
      
      - name: Train model
        run: |
          echo "Starting model training..."
          python src/train.py
          echo "Training completed"
      
      - name: Verify artifacts
        run: |
          echo "Checking generated files..."
          
          if [ -f "models/best_model.pkl" ]; then
            echo "✓ Model found"
            ls -lh models/best_model.pkl
          else
            echo "✗ Model not found"
            exit 1
          fi
          
          if [ -d "mlruns" ]; then
            echo "✓ MLflow runs found"
            find mlruns -type f | head -10
          fi
          
          if [ -d "plots" ]; then
            echo "✓ Plots found"
            ls -lh plots/
          fi
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: trained-model-${{ github.sha }}
          path: |
            models/
            mlruns/
            plots/
          retention-days: 30

  summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [lint, test, train]
    if: always()
    
    steps:
      - name: Train model
        run: |
          echo "=========================================="
          echo "DEBUGGING TRAINING"
          echo "=========================================="
          
          echo "Working directory:"
          pwd
          
          echo ""
          echo "Directory contents:"
          ls -la
          
          echo ""
          echo "Python info:"
          which python
          python --version
          
          echo ""
          echo "Packages:"
          pip list | grep -E "(pandas|sklearn|joblib)"
          
          echo ""
          echo "Dataset check:"
          if [ -f "data/raw/winequality-red.csv" ]; then
            echo "Dataset exists"
            wc -l data/raw/winequality-red.csv
            head -3 data/raw/winequality-red.csv
          else
            echo "ERROR: Dataset not found"
            ls -la data/raw/
            exit 1
          fi
          
          echo ""
          echo "=========================================="
          echo "RUNNING TRAINING..."
          echo "=========================================="
          
          python src/train.py
          
          TRAIN_EXIT=$?
          
          echo ""
          echo "=========================================="
          echo "Training exit code: $TRAIN_EXIT"
          echo "=========================================="
          
          if [ $TRAIN_EXIT -ne 0 ]; then
            echo "Training failed!"
            exit 1
          fi
          
          echo ""
          echo "Files after training:"
          ls -la models/ || echo "models/ not found"
          ls -la plots/ || echo "plots/ not found"